# Creacion de la base de datos
CREATE DATABASE sisAdmin;

USE sisAdmin;

# Creacion de la tabla Rol
CREATE TABLE Rol (
  idrol INT PRIMARY KEY AUTO_INCREMENT,
  rol VARCHAR(20) NOT NULL UNIQUE
);

# Creacion de la tabla de Usuarios
CREATE TABLE Usuario (
  idusuario INT PRIMARY KEY AUTO_INCREMENT,
  nombre VARCHAR(45) NOT NULL,
  ap_paterno VARCHAR(45) NOT NULL,
  ap_materno VARCHAR(45) NOT NULL,
  sexo TINYINT(1) NOT NULL,
  correo VARCHAR(45) NOT NULL UNIQUE,
  password VARCHAR(60) NOT NULL,
  imagen_perfil VARCHAR(100),
  rol INT NOT NULL,
  FOREIGN KEY (rol) REFERENCES Rol(idrol)
);

# Creacion de la tabla de alumnos
CREATE TABLE Lista_Alumnos (
  idalumno INT PRIMARY KEY AUTO_INCREMENT,
  matricula VARCHAR(10) NOT NULL UNIQUE,
  grado VARCHAR(20) NOT NULL,
  grupo CHAR(1) NOT NULL,
  idusuario INT NOT NULL,
  FOREIGN KEY (idusuario) REFERENCES Usuario(idusuario),
);
-- Create the Programa Educativo table
CREATE TABLE ProgramaEducativo (
  idpe INT PRIMARY KEY AUTO_INCREMENT,
  programaeducativo VARCHAR(255) NOT NULL
);

-- Create the Docente table
CREATE TABLE Docente (
  iddocente INT PRIMARY KEY AUTO_INCREMENT,
  num_empleado VARCHAR(20) NOT NULL UNIQUE,
  grado_estudios VARCHAR(100) NOT NULL,
  FOREIGN KEY (idusuario) REFERENCES Usuario(idusuario) -- Assuming a user can also be a teacher
);

-- Create the Asignatura table (Subject)
CREATE TABLE Asignatura (
  idAsignatura INT PRIMARY KEY AUTO_INCREMENT,
  asignatura VARCHAR(255) NOT NULL,  -- Consider using a more descriptive name like 'nombre_asignatura'
  acronimo VARCHAR(45) NOT NULL UNIQUE,
  creditos INT NOT NULL
);

-- Create the Periodo table
CREATE TABLE Periodo (
  idperiodo INT PRIMARY KEY AUTO_INCREMENT,
  nombreperiodo VARCHAR(45) NOT NULL,
  acronimo VARCHAR(45) NOT NULL UNIQUE
);

-- Create the Calificaciones table (Grades)
CREATE TABLE Calificaciones (
  idcalificaciones INT PRIMARY KEY AUTO_INCREMENT,
  calificacion INT,  -- Data type might be more specific (e.g., INT, DECIMAL) based on grading scheme
  calificacion_letra VARCHAR(45),
  estatus TINYINT(1),
  fecha_inicio DATE,
  fecha_fin DATE,
  lista_alumnos_idlista_alumnos INT NOT NULL,
  periodo_idperiodo INT NOT NULL,
  FOREIGN KEY (lista_alumnos_idlista_alumnos) REFERENCES Lista_Alumnos(idlista_alumnos),
  FOREIGN KEY (periodo_idperiodo) REFERENCES Periodo(idperiodo)
);


-- Optional tables for Course Load and Attendance (add these if needed)

-- Carga Horaria table (Course Load)
CREATE TABLE CargaHoraria (
  docente_iddocente INT NOT NULL,
  asignatura_idAsignatura
